let video;
let poseNet;
let poses = [];
let score = 0
let punchingbagX = 100
let img;
let state = 0;
let x;
let y;
let circlecolor = 200
let circledia = 50

function setup() {
  createCanvas(640, 480);
  video = createCapture(VIDEO);
  video.size(width, height);
  x = width / 2;
  y = height;
  // Create a new poseNet method with a single detection
  poseNet = ml5.poseNet(video, modelReady);
  // This sets up an event that fills the global variable "poses"
  // with an array every time new poses are detected
  poseNet.on('pose', function(results) {
    poses = results;
  });
  // Hide the video element, and just show the canvas
  video.hide();
}

function modelReady() {
  select('#status').html('Model Loaded');
}

function draw() {
  image(video, 0, 0, width, height);
  noStroke();
  fill(0, 255, 0);
  textSize(24);
  text("Score: " + score, 100, 100);



  // We can call both functions to draw all keypoints and the skeletons
  game();
}
// A function to draw the skeletons
function game() {
  if (0 < poses.length) {
    stroke(0, circlecolor, 0);
    noFill();
    ellipse(x, y, circledia);
    noFill();

    // Jiggling randomly on the horizontal axis
    x = x + random(-15, 15);
    // Moving up at a constant speed
    y = y + random(-15, 15);

    // Reset to the bottom
    if (y < 0 || y > height) {
      y = height / 2;
    }
    if (x < 0 || x > width) {
      x = height / 2;
    }
    pose = poses[0].pose
    print(pose.nose);
    let nose = pose.nose;
    if (nose.x <= x + circledia && nose.x >= x - circledia); {
      if (nose.y <= y + circledia && nose.y >= y - circledia); {
        score++;
      }
    }

  }
}
